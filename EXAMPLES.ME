# Resource
# Calling the resource Name and then the resource type
# Can call variables inside from the variables.tf
resource "local_file" "pet" {
  filename = var.filename
  content  = "My favorit pet is Mr.Cat"
}

resource "random_pet" "my-pet" {
  prefix = var.prefix
  separator = var.separator
  length = var.length
}

# Input Variables
# Can make in a variables.tf file
# Can call multiple fields
variable "content" {
    default = "My favorit pet is Mrs. Whiskers"
    description = "the content of the file"
}

variable "filename" {
    default = "pets.txt"
    type = string
    description = "the path of local file"
}

variable file-content {
    type = map
    default = {
        "statement1" = "We love pets!"
        "statement2" = "We love animals!"
    }
}

variable "prefix" {
    default = "Mrs"
    type = string
    description = "the prefix to be set"
}

variable "separator" {
    default = "."
}

variable length {
    default = 2
    type = number
}

# Resource Dependencies
# Second resource is calling the content of the first resource
# see content -> 1st_level.2nd_level.<name>
resource "tls_private_key" "pvtkey" {
    algorithm = "RSA"
    rsa_bits = 4096
}

resource "local_file" "key_details" {
    content = tls_private_key.pvtkey.private_key_pem
    filename = "/root/key.txt"
}

resource "local_file" "pet" {
  filename = var.filename
  content  = "My favorit pet is Mr.Cat"
  depends_on = [ //Another way to do dependencies
    random_pet.my-pet
  ]
}

# Output Variables
output "<variable_name>" {
    value = "<variable_value>"
    <argument>
}

output "pet-name" {
  value = random_pet.my-pet.id
  description = "Record the value of the pet ID generated by the random_pet resource"
}

# Lifecycle Block (create before destroy)
resource "local_file" "pet" {
  filename = var.filename
  content  = "My favorit pet is Mr.Cat"

  lifecycle {
    create_before_destroy = true
  }
}

# Lifecycle Block (prevent destroy)
resource "local_file" "pet" {
  filename = var.filename
  content  = "My favorit pet is Mr.Cat"

  lifecycle {
    prevent_destroy = true
  }
}

# Lifecycle Block (ignore changes)
resource "aws_instance" "webserver" {
  ami = "ami-0edab43b6fa892279
  instance_type = "t2.micro"
  tags = {
    Name = "ProjectA-Webserver"
  }
  lifecycle {
    ignor_changes = [
      tags
    ]
  }
}

# Data Block
# Read files outside the Infrastructure
resource "local_file" "pet"{
  filename = "/root/pets.txt"
  contnent = data.local_file.dog.content
}
  
data "local_file "dog" {
  filename = "/root/dog.txt"
}
  
